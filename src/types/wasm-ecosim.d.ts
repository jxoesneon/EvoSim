// Temporary module declaration to avoid TS errors before WASM build output exists.
declare module '@/wasm/ecosim/pkg/ecosim' {
  export interface WasmConfig {
    // --- Time parameters (world clock parity) ---
    realSecondsPerDay: number
    worldTimeScale: number
    startDayOfYear01: number
    restStaminaRegenPerSec: number
    restHealthRegenPerSec: number
    harvestPlantActionCostPerSecond: number
    attackCostPerHitStamina: number
    sprintOverflowCostPerSec: number
    postureCostPerSec: number
    attackCostPerHitEnergy: number
    thirstThreshold: number
    thirstRecoveryPerSec: number
    drinkCostPerSecond: number
    moveCostCoeffPerSpeedPerSec: number
    ambientHealthDecayPerSec: number
    agingHealthDecayCoeff: number
    gestationBaseCostPerSec: number
    gestationCostPerOffspringPerSec: number
    gestationPeriod: number
    birthEventCostEnergy: number
    mutationCostEnergyBase: number
    mutationCostPerStdChange: number
    // Telemetry thresholds
    hungerEnergyThreshold: number
    fatigueStaminaThreshold: number
    movementThreshold: number
    stagnantTicksLimit: number
    // --- Environmental cost tunables (bridged; parity in Rust pending) ---
    swimEnergyCostPerSec: number
    windDragCoeff: number
    tempColdPenaltyPerSec: number
    tempHeatPenaltyPerSec: number
    comfortLowC: number
    comfortHighC: number
    humidityDehydrationCoeffPerSec: number
    humidityThreshold: number
    oxygenThinAirPenaltyPerSec: number
    thinAirElevationCutoff01: number
    noiseStressPenaltyPerSec: number
    diseaseEnergyDrainPerSec: number
    // --- Corpse decay tunables ---
    corpseBaseDecayPerSec: number
    corpseTempDecayCoeff: number
    corpseHumidityDecayCoeff: number
    corpseRainDecayCoeff: number
    corpseWetnessDecayCoeff: number
  }
  // Minimal shape; actual bindings are generated by wasm-bindgen.
  export class World {
    constructor(width: number, height: number, seed: number)
    step(dt: number): void
    creatures_json(): any
    plants_json(): any
    corpses_json(): any
    env_costs_json?(): any
    corpse_costs_json?(): any
    set_config(config: WasmConfig): void
    set_brain_mode(mode: 'OG' | 'Zegion'): void
    set_seed(seed: number): void
    // Additional helpers available in newer builds
    set_brain_seed?(seed: number): void
    set_bad_brain_hashes?(hashes: string[]): void
    reset_world?(): void
    spawn_creature?(x: number, y: number): void
    spawn_plant?(x: number, y: number, radius?: number): void
  }
}
